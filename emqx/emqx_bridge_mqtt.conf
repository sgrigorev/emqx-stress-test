## Bridge address: node name for local bridge, host:port for remote.
##
## Value: String
## Example: emqx@127.0.0.1,  127.0.0.1:1883
bridge.mqtt.rmq.address = 127.0.0.1:1883

## Protocol version of the bridge.
##
## Value: Enum
## - mqttv5
## - mqttv4
## - mqttv3
bridge.mqtt.rmq.proto_ver = mqttv4

## Start type of the bridge.
##
## Value: enum
## manual
## auto
bridge.mqtt.rmq.start_type = auto

## Whether to enable bridge mode for mqtt bridge
##
## This option is prepared for the mqtt broker which does not
## support bridge_mode such as the mqtt-plugin of the rabbitmq
##
## Value: boolean
bridge.mqtt.rmq.bridge_mode = false

## The ClientId of a remote bridge.
##
## Value: String
bridge.mqtt.rmq.clientid = emqx_bridge

## The Clean start flag of a remote bridge.
##
## Value: boolean
## Default: true
##
## NOTE: Some IoT platforms require clean_start
##       must be set to 'true'
bridge.mqtt.rmq.clean_start = false

# TODO: change username and password
## The username for a remote bridge.
##
## Value: String
bridge.mqtt.rmq.username = guest

## The password for a remote bridge.
##
## Value: String
bridge.mqtt.rmq.password = guest

## Topics that need to be forward to rmq IoTHUB
##
## Value: String
## Example: topic1/#,topic2/#
bridge.mqtt.rmq.forwards = cloudnode/#,$SYS/broker/connection/#

## Forward messages to the mountpoint of an rmq IoTHUB
##
## Value: String
# bridge.mqtt.rmq.forward_mountpoint = emqx

## Need to subscribe to rmq topics
##
## Value: String
bridge.mqtt.rmq.subscription.1.topic = cloud/#
bridge.mqtt.rmq.subscription.2.topic = command/cloud/#

## Need to subscribe to rmq topics QoS.
##
## Value: Number
bridge.mqtt.rmq.subscription.1.qos = 1
bridge.mqtt.rmq.subscription.2.qos = 0

## A mountpoint that receives messages from rmq IoTHUB
##
## Value: String
## bridge.mqtt.rmq.receive_mountpoint = receive/rmq/

## Bribge to remote server via SSL.
##
## Value: on | off
bridge.mqtt.rmq.ssl = off

## Ping interval of a down bridge.
##
## Value: Duration
## Default: 10 seconds
bridge.mqtt.rmq.keepalive = 30s

## Bridge reconnect time.
##
## Value: Duration
## Default: 30 seconds
bridge.mqtt.rmq.reconnect_interval = 15s

## Retry interval for bridge QoS1 message delivering.
##
## Value: Duration
bridge.mqtt.rmq.retry_interval = 20s

## Inflight size.
##
## Value: Integer
bridge.mqtt.rmq.max_inflight_size = 32

## Base directory for replayq to store messages on disk
## If this config entry is missing or set to undefined,
## replayq works in a mem-only manner.
##
## Value: String
# bridge.mqtt.rmq.queue.replayq_dir = data/emqx_rmq_bridge/

## Replayq segment size
##
## Value: Bytesize
bridge.mqtt.rmq.queue.replayq_seg_bytes = 10MB

## Replayq max total size
##
## Value: Bytesize
bridge.mqtt.rmq.queue.max_total_size = 100MB